{
    "address": "0xA2Bd468bfDC79cAD2674fd32C56F2bD18595CFFB",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotEnoughETH",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__TransferFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "transactionHash": "0x4cfe7cd9c44423eb19c5529191223fc073b17dad952a317c565bb2aa49312c4d",
    "receipt": {
        "to": null,
        "from": "0xd4eA896B768651E6747f68D25648Fa78e5581e5b",
        "contractAddress": "0xA2Bd468bfDC79cAD2674fd32C56F2bD18595CFFB",
        "transactionIndex": 22,
        "gasUsed": "851571",
        "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0x748d98507bccd412b906556b4de7cc3e338917587ec006c731c19b4e65eecb5b",
        "transactionHash": "0x4cfe7cd9c44423eb19c5529191223fc073b17dad952a317c565bb2aa49312c4d",
        "logs": [],
        "blockNumber": 11132115,
        "cumulativeGasUsed": "8465231",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 1,
    "solcInputHash": "500ebf6a59248556fa24a80eab10412c",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. pragma\\npragma solidity ^0.8.8;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// 3. Errors with contract name\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughETH();\\nerror FundMe__TransferFailed();\\n\\n// 4. Interfaces\\n// 5. Libraries\\n// 6. Contracts\\ncontract FundMe {\\n    // Inside Contract\\n    // 1. Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // 2. State Variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // 3. Events\\n    // 4. Modifiers\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // 5. Functions\\n    // Function Order\\n    // 1. Constructor\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // 2. Recieve\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // // 3. Fallback\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    // 4. External\\n    // 5. Public\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD)\\n            revert FundMe__NotEnoughETH();\\n        // require(\\n        //     msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n        //     \\\"You need to spend more ETH!\\\"\\n        // );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        // for cheaper gas price we pass the variable from storage to memory once\\n        // mappings can not be saved in memory\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callSuccess) revert FundMe__TransferFailed();\\n        //require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // 6. Internal\\n    // 7. Private\\n    // 8. View / Pure\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x33218b3b7a631f311936b11799126cc20e409f67d68089084f5c75d9efe0b1f1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface _priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = _priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface _priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xf73e1c6dabf92760f9f3b74fb53cf594828948b80cf029761f17b5f36194fabb\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a060405234801561001057600080fd5b50604051610f69380380610f6983398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e04610165600039600081816101ce01526104780152610e046000f3fe6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100e75780639e87a5cd14610112578063b60d42881461013d578063d7b4750c1461014757610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100bc575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610825565b610184565b6040516100a9919061086b565b60405180910390f35b6100ba6101cc565b005b3480156100c857600080fd5b506100d1610467565b6040516100de919061086b565b60405180910390f35b3480156100f357600080fd5b506100fc610474565b6040516101099190610895565b60405180910390f35b34801561011e57600080fd5b5061012761049c565b604051610134919061090f565b60405180910390f35b6101456104c6565b005b34801561015357600080fd5b5061016e60048036038101906101699190610956565b6105f7565b60405161017b9190610895565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610251576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161028b575b5050505050905060005b815181101561035f5760008282815181106102fd576102fc610983565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610357906109e1565b9150506102df565b50600067ffffffffffffffff81111561037b5761037a610a2a565b5b6040519080825280602002602001820160405280156103a95781602001602082028036833780820191505090505b50600190805190602001906103bf92919061071b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e690610a8a565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b5050905080610463576040517fb0f7411400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610505600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063f90919063ffffffff16565b101561053d576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058b9190610a9f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061060d5761060c610983565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061064b8361067b565b90506000670de0b6b3a764000085836106649190610af5565b61066e9190610b7e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106c457600080fd5b505afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190610c3c565b5050509150506402540be400816107139190610cb7565b915050919050565b828054828255906000526020600020908101928215610794579160200282015b828111156107935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061073b565b5b5090506107a191906107a5565b5090565b5b808211156107be5760008160009055506001016107a6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f2826107c7565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a6107c2565b5b600061084984828501610810565b91505092915050565b6000819050919050565b61086581610852565b82525050565b6000602082019050610880600083018461085c565b92915050565b61088f816107e7565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6000819050919050565b60006108d56108d06108cb846107c7565b6108b0565b6107c7565b9050919050565b60006108e7826108ba565b9050919050565b60006108f9826108dc565b9050919050565b610909816108ee565b82525050565b60006020820190506109246000830184610900565b92915050565b61093381610852565b811461093e57600080fd5b50565b6000813590506109508161092a565b92915050565b60006020828403121561096c5761096b6107c2565b5b600061097a84828501610941565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ec82610852565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1f57610a1e6109b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a74600083610a59565b9150610a7f82610a64565b600082019050919050565b6000610a9582610a67565b9150819050919050565b6000610aaa82610852565b9150610ab583610852565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aea57610ae96109b2565b5b828201905092915050565b6000610b0082610852565b9150610b0b83610852565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4457610b436109b2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8982610852565b9150610b9483610852565b925082610ba457610ba3610b4f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bce81610baf565b8114610bd957600080fd5b50565b600081519050610beb81610bc5565b92915050565b6000819050919050565b610c0481610bf1565b8114610c0f57600080fd5b50565b600081519050610c2181610bfb565b92915050565b600081519050610c368161092a565b92915050565b600080600080600060a08688031215610c5857610c576107c2565b5b6000610c6688828901610bdc565b9550506020610c7788828901610c12565b9450506040610c8888828901610c27565b9350506060610c9988828901610c27565b9250506080610caa88828901610bdc565b9150509295509295909350565b6000610cc282610bf1565b9150610ccd83610bf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0c57610d0b6109b2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4957610d486109b2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8657610d856109b2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dc357610dc26109b2565b5b82820290509291505056fea2646970667358221220303a7d24830f5f8b03072ce49f0fb38b0bc7ce0c8233df7b928590c2e3f95e3c64736f6c63430008080033",
    "deployedBytecode": "0x6080604052600436106100705760003560e01c8063893d20e81161004e578063893d20e8146100e75780639e87a5cd14610112578063b60d42881461013d578063d7b4750c1461014757610070565b80630343fb25146100755780633ccfd60b146100b25780636b69a592146100bc575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610825565b610184565b6040516100a9919061086b565b60405180910390f35b6100ba6101cc565b005b3480156100c857600080fd5b506100d1610467565b6040516100de919061086b565b60405180910390f35b3480156100f357600080fd5b506100fc610474565b6040516101099190610895565b60405180910390f35b34801561011e57600080fd5b5061012761049c565b604051610134919061090f565b60405180910390f35b6101456104c6565b005b34801561015357600080fd5b5061016e60048036038101906101699190610956565b6105f7565b60405161017b9190610895565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610251576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156102d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161028b575b5050505050905060005b815181101561035f5760008282815181106102fd576102fc610983565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610357906109e1565b9150506102df565b50600067ffffffffffffffff81111561037b5761037a610a2a565b5b6040519080825280602002602001820160405280156103a95781602001602082028036833780820191505090505b50600190805190602001906103bf92919061071b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e690610a8a565b60006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b5050905080610463576040517fb0f7411400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610505600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063f90919063ffffffff16565b101561053d576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461058b9190610a9f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061060d5761060c610983565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061064b8361067b565b90506000670de0b6b3a764000085836106649190610af5565b61066e9190610b7e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106c457600080fd5b505afa1580156106d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fc9190610c3c565b5050509150506402540be400816107139190610cb7565b915050919050565b828054828255906000526020600020908101928215610794579160200282015b828111156107935782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061073b565b5b5090506107a191906107a5565b5090565b5b808211156107be5760008160009055506001016107a6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f2826107c7565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a6107c2565b5b600061084984828501610810565b91505092915050565b6000819050919050565b61086581610852565b82525050565b6000602082019050610880600083018461085c565b92915050565b61088f816107e7565b82525050565b60006020820190506108aa6000830184610886565b92915050565b6000819050919050565b60006108d56108d06108cb846107c7565b6108b0565b6107c7565b9050919050565b60006108e7826108ba565b9050919050565b60006108f9826108dc565b9050919050565b610909816108ee565b82525050565b60006020820190506109246000830184610900565b92915050565b61093381610852565b811461093e57600080fd5b50565b6000813590506109508161092a565b92915050565b60006020828403121561096c5761096b6107c2565b5b600061097a84828501610941565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ec82610852565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1f57610a1e6109b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a74600083610a59565b9150610a7f82610a64565b600082019050919050565b6000610a9582610a67565b9150819050919050565b6000610aaa82610852565b9150610ab583610852565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aea57610ae96109b2565b5b828201905092915050565b6000610b0082610852565b9150610b0b83610852565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4457610b436109b2565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b8982610852565b9150610b9483610852565b925082610ba457610ba3610b4f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bce81610baf565b8114610bd957600080fd5b50565b600081519050610beb81610bc5565b92915050565b6000819050919050565b610c0481610bf1565b8114610c0f57600080fd5b50565b600081519050610c2181610bfb565b92915050565b600081519050610c368161092a565b92915050565b600080600080600060a08688031215610c5857610c576107c2565b5b6000610c6688828901610bdc565b9550506020610c7788828901610c12565b9450506040610c8888828901610c27565b9350506060610c9988828901610c27565b9250506080610caa88828901610bdc565b9150509295509295909350565b6000610cc282610bf1565b9150610ccd83610bf1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0c57610d0b6109b2565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4957610d486109b2565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8657610d856109b2565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dc357610dc26109b2565b5b82820290509291505056fea2646970667358221220303a7d24830f5f8b03072ce49f0fb38b0bc7ce0c8233df7b928590c2e3f95e3c64736f6c63430008080033",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 65,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 77,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
